
/* ==========================================================================
   LINK styles
   ========================================================================== */

/* 
   Link Vars
   ========================================================================== */


/*The default foreground color for links. Only used by skyros skins.*/
.AFLinkColor:alias{
	  color:-tr-property-ref(".FLTAquaColor2:alias","color");
}
/*Color for links in the active state.  Only used by skyros skins.*/
.AFLinkActiveColor:alias{
	  color:-tr-property-ref(".FLTLavender2:alias","color");
}
/*Disabled link color.  Only used by skyros skins.*/
.AFLinkDisabledColor:alias{

}

// Highlight the Access Key for the link, e.g. bold it.
.AFLinkAccessKeyStyle:alias	{}

// Specifies the style for links in hover state.
.AFLinkHover:alias	{}

// The default border information (color, size, style) for active links.
.AFActiveLinkBorder:alias	{}

// The default border information (color, size, style) for visited, focused links.
.AFVisitedLinkBorder:alias	{}



/**
 * Style on the root element of the af:link component. This style includes the .AFLinkForeground:alias and .AFDefaultFont:alias styles. You can use any valid CSS-2.1 pseudo-class, like :hover, :active, :focus, as well as :disabled to style the component for different states. Please note that for links :focus pseudo-class does not work in IE 7. The visited pseudo-class does not apply to hyperlinks generated by an action (command) type link because clicking on the link results in firing a command which may or may not result in a page navigation. On the other hand, the "visited" pseudo-class applies to hyperlinks generated by a destination (go) type link that have already been visited by the user. This is a user agent capability and user agents may choose to return a visited link to the (unvisited) ":link" state after a certain period of time. The state :visited includes .AFVisitedLinkForeground:alias, the state :focus includes .AFActiveLinkBorder:alias, the state :visited:focus includes .AFVisitedLinkBorder:alias the state :active includes .AFActiveLinkForeground:alias, the state :active:link includes .AFActiveLinkForeground:alias, and the state :disabled:active includes .AFLinkForeground:alias. When the link has a context facet this style is placed around all content with the exception of the context facet content. See af|link::context for more information. Tip: If you skin the background-image, you may also want to skin it for :hover, :active, and :disabled.
 * Pseudo classes	Description
 * visited	 
 * disabled	 
 * text-only	Styles when there is no icon.
 * trailing	Styles when the icon position is trailing
 * top	Styles when the icon position is top
 * bottom	Styles when the icon position is bottom

 */

af|link	{}


// Styles the access key character for links, default bold. This style includes .AFLinkAccessKeyStyle:alias
af|link::access-key{}
// Placed around the context facet content. A compound selector like "af|link::context af|contextInfo" can be used to control padding so that the icon doesn't overlap the link text
af|link::context{}
// Style of the image used inside of the af:link component.
af|link::image{}
// Style on the link text on the af:link component.
af|link::text{}

